# Autogenerated -- do not edit!

HATCH = hatch $(ARGS)

ENVS = default dev dist

CLEANFILES = build dist htmlcov __pycache__ .mypy_cache .pytest_cache	\
.packages .coverage *.spec site

CHECKALL = check deps build upload-check

MAKEFLAGS = --no-print-directory

export PATH := $(HOME)/.local/bin:$(PATH)

export PIP_COMPILE_UPGRADE := $(UPGRADE)
export PIP_COMPILE_UPGRADE_PACKAGE := $(UPGRADE_PKG)

all: help

# Setup.

setup: ## Do initial setup
	@ $(HATCH) env create $(OPTS)

env: ## Show environments
	@ $(HATCH) env show $(OPTS)

sync: ## Sync environments
	@ for env in $(ENVS); do $(HATCH) run -- echo Sync $$env; done
	@ $(MAKE) env

upgrade: ## Upgrade requirements
	@ rm -rf requirements*
	@ make sync check-all

# Testing.

check: test lint format ## Run all tests

test: ## Run package tests
	@ $(HATCH) test --cover $(OPTS)

doctest: ## Run doctests
	@ $(HATCH) test README.md

lint: ## Run linter on sources
	@ $(HATCH) fmt -l $(OPTS)

lint-fix: ## Apply linter fixes to sources
	@ $(HATCH) fmt -l --fix $(OPTS)

format: ## Run formatter on sources
	@ $(HATCH) fmt -f --check $(OPTS)

format-fix: ## Fix formatting in sources
	@ $(HATCH) fmt -f $(OPTS)

deps: ## Show package dependency tree
	@ $(HATCH) -e dev run pkg-deps $(OPTS)

# Packaging.

build: ## Build packages
	@ $(HATCH) build $(OPTS)

# Uploading to PyPI.

wheel-check: build  ## Check wheel is valid
	@ $(HATCH) -e dist run check-wheel dist/*.whl $(OPTS)

upload-check: wheel-check ## Check upload is valid
	@ $(HATCH) -e dist run check-upload dist/* $(OPTS)

upload-test: upload-check ## Upload to testpypi
	@ $(HATCH) publish -r test $(OPTS)

upload: upload-check ## Upload to pypi
	@ $(HATCH) publish $(OPTS)

# Other targets.

test-all: test doctest ## Test everything

check-all: $(CHECKALL) ## Check everything

clean: ## Clean up
	@ $(HATCH) clean
	@ $(HATCH) env prune
	@ echo Cleaning up
	@ rm -rf $(CLEANFILES)

help: ## This help message
	@ echo "Usage: make [target]"
	@ echo
	@ grep -h ":.*##" $(MAKEFILE_LIST) | grep -v 'sed -e' | \
	  sed -e 's/:.*##/:/' | column -t -s:
